import React, { useCallback, useMemo, useState } from 'react';
import { Input } from 'adesign-react'
import DataItem from './item'
import { useSelector, useDispatch } from 'react-redux'
import produce from 'immer';
import { useStore } from 'react-redux'



const Debug = (props) => {
  const dispatch = useDispatch();

  const value = useSelector(store => store.apis.list)
  const store=useStore();
  // const [value, onChange] = useState({
  //   jim: {
  //     phone: '13301360170',
  //     birthdate: '19880921',
  //   },
  //   tom: {
  //     phone: '1183292382',
  //     birthdate: '1928392'
  //   },
  //   lucy: {
  //     phone: '3123412',
  //     birthdate: '1990231',
  //   }
  // });

  const onChange = (data) => {

    dispatch({
      type: 'apis/updateList',
      payload: data
    })
  }

  const handleChange = useCallback((key, newVal) => {
    const oldValue=store.getState().apis.list;
    const newData = {
      ...oldValue,
      [key]: newVal
    }
    onChange(newData)
  }, [])

  const handleKeyChange = useCallback((oldKey, newKey) => {
    const preVal=store.getState().apis.list;
    const entriesList = Object.entries(preVal);
    const newList = entriesList.map(([key, data]) => {
      if (key !== oldKey) {
        return [key, data];
      }
      else {
        return [newKey, data]
      }
    })
    const dataNew = Object.fromEntries(newList);

    const keyList = Object.keys(preVal);
    if (keyList.indexOf(newKey) !== -1) {
      return
    }
      onChange(dataNew)




  }, [])

  return (
    <div style={{ width: '100%', height: '100%', background: 'var(--font-1)fff' }}>

      <div style={{ width: 500 }}>
        {
          Object.entries(value).map(([key, item], index) => (
            <DataItem value={item} key={index} dataKey={key} onChange={handleChange} onKeyChange={handleKeyChange} />
          ))
        }
      </div>
    </div>
  );
};

export default Debug;
